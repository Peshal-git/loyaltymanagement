        {{>navbar}}
        <div class="whole-form">
            <form class="rdetails-form" action="/update-transaction-details?id={{user.id}}&reservationIndex={{reservationIndex}}" method="POST">
            <div class="left-column">

                <div class="form-group">
                    <label for="j">Transaction Code:</label>
                    <div class="input-wrapper">
                    <input class="editable" type="text" name="tranCode"
                        value="{{getValue transactionObj.tranCode enteredFields.tranCode}}"
                        readonly required>
                    <span class="edit-icon">&#9998;</span>
                    </div>
                </div>

                <div class="form-group">
                    <label for="spendingType">Spending Type:</label>
                    <select name="spendingType" id="spendingType" required value="{{transactionObj.spendingType}}">
                        <option value="Life Café">Life Café</option>
                        <option value="Yoga Class">Yoga Class</option>
                        <option value="Vita Spa">Vita Spa</option>
                        <option value="Retreats and YTT Packages">Retreats and YTT Packages</option>
                    </select>
                </div>

                <div class="form-group">
                    <label for="multiplier">Multiplier</label>
                    <input type="number" name="multiplier" id="multiplier" value="" readonly>
                </div>

                <div class="form-group">
                        <label for="tier">Tier</label>
                        <input type="text" name="tier" class="form-input" value="{{user.tier}}" readonly>
                </div>

            </div>

            <div class="right-column">

                 <div class="form-group spacer">
                </div>

                <div class="form-group">
                    <label for="n">Amount:</label>
                    <div class="input-wrapper">
                    <input class="editable" type="text" name="amount" id="amount"
                        value="{{getValue transactionObj.amount enteredFields.amount}}"
                        readonly required>
                    <span class="edit-icon">&#9998;</span>
                    </div>
                </div>

                <div class="form-group">
                    <label for="n">Points Gained:</label>
                    <input type="text" name="pointsGained" id="pointsGained"
                        value="{{transactionObj.pointsGained}}"
                        readonly>
                </div>

                <div class="form-group">
                        <label for="netAmount">Net Amount</label>
                        <input type="number" name="netAmount" id="netAmount" class="form-input" value="" readonly>
                </div>

                {{#if error}}
                <h4 style="color: #CD5C5C;">{{error}}</h4>
                {{/if}}

                
                <div class="lastbuttons">
                <input class="update-button" type="submit" value="&#x1F4DD; Update"> 
                <a href="/delete-transaction/?id={{user.id}}" class="delete-button">&#x1F5D1; Delete</a>
                </div>

            </div>   

            </form>
        </div>

        
    </body>

<script>
  document.querySelectorAll('.form-group').forEach(group => {
    const inputField = group.querySelector('.editable');
    const editIcon = group.querySelector('.edit-icon');

    if (inputField && editIcon) {
        editIcon.addEventListener('click', function() {
            inputField.removeAttribute('readonly'); // Make the input editable
            inputField.focus(); // Set focus to the input field

            const end = inputField.value.length;
            inputField.setSelectionRange(end, end);
        });

        inputField.addEventListener('focus', function() {
            editIcon.style.visibility = 'hidden'; // Hide the icon when input is focused
        });

        inputField.addEventListener('blur', function() {
            editIcon.style.visibility = 'visible'; // Show the icon when input loses focus
        });
    }
  })

   async function getMultiplier() {
        const spendingType = document.getElementById("spendingType").value

        const response = await fetch(`/get-multiplier?spendingType=${encodeURIComponent(spendingType)}`)
        const data = await response.json()

        if (data && data.multiplier) {
            document.getElementById("multiplier").value = data.multiplier
        }

        calculatePointsGained()
    }

    async function calculateDiscount() {
        const amount = parseFloat(document.getElementById("amount").value)

        if (isNaN(amount) || amount <= 0) {
            document.getElementById("netAmount").value = ""
            document.getElementById("pointsGained").value = ""
            return;
        }

        const id = document.querySelector("form").getAttribute("action").split('=')[1]
        console.log(id)
        const response = await fetch(`/get-discount?id=${id}`)
        const discountData = await response.json()

        if (discountData && discountData.discount) {
            const discountPercentage = discountData.discount
            const discountAmount = (discountPercentage / 100) * amount
            const netAmount = amount - discountAmount
            
            document.getElementById("netAmount").value = `${netAmount.toFixed(2)}`
            
        }

        calculatePointsGained()
    }

    function calculatePointsGained() {
        const amount = parseFloat(document.getElementById("amount").value);
        const multiplier = parseFloat(document.getElementById("multiplier").value);

        if (!isNaN(amount) && amount > 0 && !isNaN(multiplier)) {
            const points = amount * multiplier;
            document.getElementById("pointsGained").value = points.toFixed(2);
        } else {
            document.getElementById("pointsGained").value = "";
        }
    }

    document.addEventListener("DOMContentLoaded", async () => {
        await getMultiplier();
        await calculateDiscount();
    })


    document.getElementById("amount").addEventListener("input", calculateDiscount)
    document.getElementById("spendingType").addEventListener("change", getMultiplier)

</script>
</html>
