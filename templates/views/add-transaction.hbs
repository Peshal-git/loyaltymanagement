<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Transaction</title>
    <link rel="stylesheet" href="/css/add-transaction.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inknut+Antiqua:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
</head>
<body>

    <nav class="top-nav">
        <a href="/" class="dashboard-link">
            <img src="/images/vikasa-name.png" alt="Vikasa">
        </a>
        <div class="nav-links">
            <a href="/logout" class="logout-link">Logout</a>
        </div>
    </nav>

    <div class="main-container">
        <div class="whole-form">
            <form action="/add-transaction?id={{id}}" method="post" class="reservation-form" autocomplete="off">
                <div class="left-column">

                    <div class="form-group">
                        <label for="spendingType">Spending Type</label>
                        <select name="spendingType" id="spendingType" required value="{{#if enteredFields.spendingType}}{{enteredFields.spendingType}}{{/if}}">
                            <option value="Life Café">Life Café</option>
                            <option value="Yoga Class">Yoga Class</option>
                            <option value="Vita Spa">Vita Spa</option>
                            <option value="Retreats and YTT Packages">Retreats and YTT Packages</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="amount">Amount</label>
                        <input type="number" name="amount" id="amount" class="form-input" value="{{getValue transactionObj.amount enteredFields.amount}}" placeholder="Enter amount" required>
                    </div>

                    <div class="form-group">
                        <label for="multiplier">Multiplier</label>
                        <input type="number" name="multiplier" id="multiplier" class="form-input" value="" readonly>
                    </div>

                    <div class="form-group">
                        <label for="netAmount">Net Amount</label>
                        <input type="number" name="netAmount" id="netAmount" class="form-input" value="" readonly>
                    </div>

                </div>

                <div class="right-column">
                    <div class="form-group">
                        <label for="tier">Tier</label>
                        <input type="text" name="tier" class="form-input" value="{{getTier user.tier enteredFields.tier}}" readonly>
                    </div>

                    <div class="form-group">
                        <label for="tranCode">Transaction Code</label>
                        <input type="text" name="tranCode" class="form-input" value="{{getValue transactionObj.tranCode enteredFields.tranCode}}" required>
                    </div>

                    <div class="form-group">
                        <label for="pointsGained">Points Gained</label>
                        <input type="number" name="pointsGained" id="pointsGained" class="form-input" value="" readonly>
                    </div>

                    <button type="submit" class="confirm-button">Confirm Transaction</button>
                    
                </div>
            </form>
            
        </div>
        {{#if error}}
                        <h3 style="color: #CD5C5C;">{{error}}</h3>
        {{/if}}
    </div>

<script>
    async function getMultiplier() {
        const spendingType = document.getElementById("spendingType").value

        const response = await fetch(`/get-multiplier?spendingType=${encodeURIComponent(spendingType)}`)
        const data = await response.json()

        if (data && data.multiplier) {
            document.getElementById("multiplier").value = data.multiplier
        }

        calculatePointsGained()
    }

    async function calculateDiscount() {
        const amount = parseFloat(document.getElementById("amount").value)

        if (isNaN(amount) || amount <= 0) {
            document.getElementById("netAmount").value = ""
            document.getElementById("pointsGained").value = ""
            return;
        }

        const id = document.querySelector("form").getAttribute("action").split('=')[1]
        const response = await fetch(`/get-discount?id=${id}`)
        const discountData = await response.json()

        if (discountData && discountData.discount) {
            const discountPercentage = discountData.discount
            const discountAmount = (discountPercentage / 100) * amount
            const netAmount = amount - discountAmount
            document.getElementById("netAmount").value = `${netAmount.toFixed(2)}`
            
        }

        calculatePointsGained()
    }

    function calculatePointsGained() {
        const amount = parseFloat(document.getElementById("amount").value);
        const multiplier = parseFloat(document.getElementById("multiplier").value);

        if (!isNaN(amount) && amount > 0 && !isNaN(multiplier)) {
            const points = amount * multiplier;
            document.getElementById("pointsGained").value = points.toFixed(2);
        } else {
            document.getElementById("pointsGained").value = "";
        }
    }


    document.getElementById("amount").addEventListener("input", calculateDiscount)
    document.getElementById("spendingType").addEventListener("change", getMultiplier)

    document.addEventListener("DOMContentLoaded", getMultiplier)
</script>

</body>
</html>
