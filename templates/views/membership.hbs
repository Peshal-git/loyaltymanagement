<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Membership</title>
  <link rel="stylesheet" href="/css/membership.css" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
   <link rel="stylesheet" href="/css/global.css" />
     <link rel="icon" href="/images/favicon.ico" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
   <link
      href="https://fonts.googleapis.com/css2?family=Nunito:wght@300;400;500;600;700;800;900&display=swap"
      rel="stylesheet"
    />
</head>
<body>
   <div class="main-wrapper">
    <div class="bg-overlay"></div>
    <div class="container">
       {{> sidebar hideItems=false active="membership" }}
        <div class="main-container">
        <div class="left-container">
            <div class="content">
               {{> banner}}
               <div class="content-wrapper">
                  <h3>Your Level Progress</h3>
                  <p class="subtitle">Level us your membership status in three easy ways: with eligible nights stayed, eligible spend or stays at multiple brands.</p>
                 {{> stepper}}

               <div class="booking-info">
                {{#if user.tier}}
                  {{#if (eq user.tier "Balance")}}
                    <div class="card">
                      <div class="circular-progress" id="progress-1"></div>
                      <p class="info">Earn {{minus basePoints.Vitality user.membershipInfo.pointsAvailable}} more points to reach Vitality</p>
                    </div>
                    <div class="card">
                      <div class="circular-progress" id="progress-2"></div>
                      <p class="info">Earn {{minus basePoints.Harmony user.membershipInfo.pointsAvailable}} more points to reach Harmony</p>
                    </div>
                    <div class="card">
                      <div class="circular-progress" id="progress-3"></div>
                      <p class="info">Earn {{minus basePoints.Serenity user.membershipInfo.pointsAvailable}} more points to reach Serenity</p>
                    </div>
                  {{else if (eq user.tier "Vitality")}}
                    <div class="card">
                      <div class="circular-progress" id="progress-1"></div>
                      <p class="info">Earn {{minus basePoints.Harmony user.membershipInfo.pointsAvailable}} more points to reach Harmony</p>
                    </div>
                    <div class="card">
                      <div class="circular-progress" id="progress-2"></div>
                      <p class="info">Earn {{minus basePoints.Serenity user.membershipInfo.pointsAvailable}} more points to reach Serenity</p>
                    </div>
                  {{else if (eq user.tier "Harmony")}}
                    <div class="card">
                      <div class="circular-progress" id="progress-1"></div>
                      <p class="info">Earn {{minus basePoints.Serenity user.membershipInfo.pointsAvailable}} more points to reach Serenity</p>
                    </div>
                  {{else if (eq user.tier "Serenity")}}
                  {{/if}}
                {{/if}}
              </div>


        </div>
        </div>
        </div>
  </div>

</body>
</html>

  <script src="https://cdn.jsdelivr.net/npm/progressbar.js"></script>

<script>
   const progress1Percentage = {{divide user.membershipInfo.pointsAvailable (progressOne user.tier basePoints)}}
   const progressBar = new ProgressBar.Circle(`#progress-1`, {
      color: '#66748e',
       strokeWidth: 5,
       duration: 1400,
        trailColor: '#2a353a45',
      easing: 'easeInOut',
      text: {
        value: "{{commaFormat user.membershipInfo.pointsAvailable}}/{{commaFormat (progressOne user.tier basePoints)}}",
        style: {
          color: '#66748e',
          position: 'absolute',
          left: '50%',
          top: '50%',
          transform: 'translate(-50%, -50%)',
          fontSize: '1em',
          fontWeight: '400',
        },
      },
      
    });
    progressBar.animate(progress1Percentage);

    const progress2Percentage = {{divide user.membershipInfo.pointsAvailable (progressTwo user.tier basePoints)}}
    const progressBar2 = new ProgressBar.Circle(`#progress-2`, {
      color: '#66748e',
       strokeWidth: 5,
       duration: 1400,
        trailColor: '#2a353a45',
      easing: 'easeInOut',
      text: {
        value: "{{commaFormat user.membershipInfo.pointsAvailable}}/{{commaFormat (progressTwo user.tier basePoints)}}",
        style: {
          color: '#66748e',
          position: 'absolute',
          left: '50%',
          top: '50%',
          transform: 'translate(-50%, -50%)',
          fontSize: '1em',
          fontWeight: '400',
        },
      },
      
    });
    progressBar2.animate(progress2Percentage);

    const progress3Percentage = {{divide user.membershipInfo.pointsAvailable basePoints.Serenity}}
    const progressBar3 = new ProgressBar.Circle(`#progress-3`, {
      color: '#66748e',
       strokeWidth: 5,
       duration: 1400,
        trailColor: '#2a353a45',
      easing: 'easeInOut',
      text: {
        value: "{{commaFormat user.membershipInfo.pointsAvailable}}/{{commaFormat basePoints.Serenity}}",
        style: {
          color: '#66748e',
          position: 'absolute',
          left: '50%',
          top: '50%',
          transform: 'translate(-50%, -50%)',
          fontSize: '1em',
          fontWeight: '400',
        },
      },
      
    });
    progressBar3.animate(progress3Percentage);
</script>